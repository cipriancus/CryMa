swagger: '2.0'
info:
  description: |
    Cryptocurrency Manager, you can find 
    out more about CryMa at 
    [https://github.com/cipriancus/CryMa](https://github.com/cipriancus/CryMa )
  version: 1.0.0
  title: CryMa
  license:
    name: MIT
    url: https://github.com/cipriancus/CryMa/blob/master/LICENSE
# host: https://github.com/cipriancus/CryMa
# basePath: /v2
tags:
- name: cryma
  description: CryMa
  externalDocs:
    description: Find out more
    url: https://github.com/cipriancus/CryMa
- name: busaco
  description: Buraga Sabin's website
  externalDocs :
    description : Buraga Sabin's website
    url : https://profs.info.uaic.ro/~busaco/
# schemes:
# - http
paths:
  /cointology/:
    post:
      tags:
      - Cointology
      summary: Create new coin
      operationId: createCoin
      produces:
      - application/json-ls
      - application/html
      parameters:
      - in: body
        name: body
        description: Created coin object
        required: true
        schema:
          $ref: '#/definitions/Coin'
      responses:
        default:
          description: successful operation
  /cointology/createWithArray:
    post:
      tags:
      - Cointology
      summary: Creates list of coins with given input array
      operationId: createCoinWithArrayInput
      produces:
      - application/json-ld
      - application/html
      parameters:
      - in: body
        name: body
        description: List of coin object
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Coin'
      responses:
        default:
          description: successful operation
  /cointology/{coin-id}:
    get:
      tags:
      - Cointology
      summary: Get coin from the system using id
      parameters:
      - name: coin-id
        in: path
        description: Coin Id
        required: true
        type : string
      produces:
      - application/json-ld
      - application/html
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
                $ref: '#/definitions/Coin'
        400:
          description: Invalid coin id supplied
    put:
      tags:
      - Cointology
      summary: Updated coin
      operationId: updateCoinById
      produces:
      - application/json-id
      - application/html
      parameters:
      - name: coin-id
        in: path
        description: Coin Id
        required: true
        type: string
      - in: body
        name: body
        description: List of coin object
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/Coin'
      responses:
        200:
          description: successful operation
        400:
          description: Invalid coin id supplied
  /plot:
    get:
      tags:
      - Plot
      summary: Provides data for the price evolution chart
      operationId: priceChart
      produces:
      - application/json-ld
      - application/html
      parameters:
      - name: page
        in: query
        description: The page number
        required: true
        type: string
      - name: pageNo
        in: query
        description: Items per page
        required: true
        type: string
      - name: startDate
        in: query
        description: The start date for the data.
        required: true
        type: string
      - name: endDate
        in: query
        description: The end date for the data.
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items :  
              $ref: '#/definitions/PlotData'
        400:
          description: Invalid input provided
  /plot/{coin-id}:
    get:
      tags:
      - Plot
      summary: Provides data for the price evolution chart
      operationId: getCoinValueById
      produces:
      - application/json-ld
      - application/html
      parameters:
      - name: coin-id
        in: path
        description : The coin id that is searched.
        required : true
        type: string
      - name: startDate
        in: query
        description: The start date for the data.
        required: true
        type: string
      - name: endDate
        in: query
        description: The end date for the data.
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items :  
              $ref: '#/definitions/PlotData'
        400:
          description : Invalid data provided
  /plot/pieChartDistrib:
    get:
      tags:
      - Plot
      summary: Provides data for the distribution of main cryptocurrencies chart
      operationId: pieChart
      produces:
      - application/json-ld
      - application/html
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items :  
              $ref: '#/definitions/PlotData'
  /news/getLatest:
    get:
      tags:
      - News
      summary: Get latest news
      operationId: getLatest
      produces:
      - application/json-ld
      - application/html
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items :  
              $ref: '#/definitions/News'
  /news/coin/{coinId}:
    get:
      tags:
      - News
      summary: Get coin by coin id
      operationId: getNewsByCoin
      produces:
      - application/json-ld
      - application/html
      parameters:
      - name: coinId
        in: path
        description: The news that needs to be fetched by id.
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/News'
        400:
          description: Invalid coin id supplied
        404:
          description: Coin id not found
  /news/page:
    get:
      tags:
      - News
      summary: Get a specific news page.
      produces:
      - application/json-ld
      - application/html
      operationId: getCoinPage
      parameters:
      - name: page
        in: query
        description: The page number.
        required: true
        type: string
      - name: itemNo
        in: query
        description: How many news per page.
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items :  
              $ref: '#/definitions/News'
        400:
          description: Invalid input provided
  /coinconversion/{name}:
    get:
      tags:
      - Coin Conversion
      summary: Get coin by name
      operationId: getCoinByName
      produces:
      - application/json-ld
      - application/html
      parameters:
      - name: name
        in: path
        description: The name that needs to be fetched.
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CoinValue'
        400:
          description: Invalid name supplied
        404:
          description: Coin not found
  /coinconversion/uri/{uri}:
    get:
      tags:
      - Coin Conversion
      summary: Get coin by URI
      operationId: getCoinByUri
      produces:
      - application/json-ld
      - application/html
      parameters:
      - name: uri
        in: path
        description: The URI that needs to be fetched. 
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CoinValue'
        400:
          description: Invalid URI supplied
        404:
          description: URI not found
definitions:
  Coin:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name : 
        type : string
      logo :
        type : string
      website :
        type : string
      typeOf : 
        type : string
      price:
        type : integer
        format : float
      priceHistory :
        $ref : '#/definitions/CoinValue'
    xml:
      name: Coin
  PlotData:
    type: object
    properties:
      id:
        type: integer
        format: int64
      unixTime:
        type : integer
        format : int64
      value:
        type : integer
        format : float
    xml:
      name: PlotData
  CoinValue:
    type: object
    properties:
      id:
        type: integer
        format: float
      name:
        type: string
      value:
        type : integer
        format : float
      uri:
        type : string
    xml:
      name: CoinValue
  News:
    type: object
    required:
    - id
    - title
    - urlSource
    - shortText
    - longText
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
        example: Bitcoin price surge
      urlSource:
        type : string
      shortText :
        type : string
      longText :
        type : string
      photoUrls:
        type: string
    xml:
      name: News
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /cipriancus1/CryMa/1.0.0
schemes:
 - https
 - http